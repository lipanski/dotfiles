--langdef=crystal
--langmap=crystal:.cr
--regex-crystal=/^\s*module\s+([A-Z][a-zA-Z0-9_:]*)/\1/m,module/
--regex-crystal=/^\s*(abstract|private)?\s?class\s+([A-Z][a-zA-Z0-9_:]*)/\2/c,class/
--regex-crystal=/^\s*(abstract|private)?\s?struct\s+([A-Z][a-zA-Z0-9_:]*)/\2/s,struct/
--regex-crystal=/^\s*(abstract|private|protected)?\s?def\s+(self\.)?([a-z_][a-zA-Z0-9_?!=]*)/\3/d,def/
--regex-crystal=/^\s*macro\s+([a-z_][a-zA-Z0-9_?!]*)/\1/f,macro/
--langdef=markdown
--langmap=markdown:.md
--regex-markdown=/^#+[ \t](.*$)/\1/h,heading,headings/
--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/fn +([a-zA-Z0-9_]+) *[(<{]/\1/f,functions,function definitions/
--regex-Rust=/(type|enum|struct|trait)[ \t]+([a-zA-Z0-9_]+) *[<{(;]/\2/T,types,type definitions/
--regex-Rust=/mod[ \t]+([a-zA-Z0-9_]+) *[<{(;]/\1/M,modules,module definitions/
--regex-Rust=/(static|const) +([a-zA-Z0-9_]+) *[:=]/\2/c,consts,static constants/
--regex-Rust=/macro_rules! +([a-zA-Z0-9_]+) *[{]/\1/d,macros,macro definitions/
--regex-Rust=/impl([ \t\n]*<[^>]*>)?[ \t]+(([a-zA-Z0-9_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([a-zA-Z0-9_]+)/\6/i,impls,trait implementations/

